@model List<Book_ListBookCategories>
@using Project_Work_Libreria.Database;

@using Project_Work_Libreria.Models.ModelForViews;
@{
    int counter = 0;
    int SupplierCout = 0;
    List<Supplier> suppliers = new List<Supplier>();
    using(BookShopContext db = new BookShopContext())
    {
        foreach(Supplier supplier in db.Supplier)
        {
            suppliers.Add(supplier);
        }
    }
}

<input class="d-none"id="book-counter" value="@Model.Count"></input>
<input class="d-none" id="supplier-counter" value="@suppliers.Count"></input>
<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <h3 class="text-white">Lista degli articoli</h3>
        </div>
    </div>
    <div class="row my-3">
        <div class="col-12 ">

            <table class="table table-striped table-light">
                <thead>
                    <tr>
                        <th class="col" scope="col">id</th>
                        <th class="col" scope="col">Immagine</th>
                        <th class="col" scope="col">Titolo</th>
                        <th class="col" scope="col">Autore</th>
                        <th class="col" scope="col">Categoria</th>
                        <th class="col" scope="col">Descrizione</th>
                        <th class="col" scope="col">Prezzo</th>
                        <th class="col" scope="col">Copie disponibili</th>
                        <th class="col" scope="col">Azioni</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Book_ListBookCategories dataModel in Model)
                    {
                        ++counter;
                        <tr>
                            <th scope="row">@dataModel.Book.Id</th>
                            <td><img class="img-fluid img_square" width="100" height="100" src="@dataModel.Book.ImgSource" alt="Immagine @dataModel.Book.Title"></td>
                            <td>@dataModel.Book.Title</td>
                            <td>@dataModel.Book.Author</td>
                            <td>@dataModel.Book.Category.Name</td>
                            <td>@dataModel.Book.Description</td>
                            <td>@dataModel.Book.Price.ToString("n2") €</td>
                            <td>@dataModel.Book.AvailableCopies

                             
                             
                              
                            
                                @if(dataModel.Book.AvailableCopies <= 10)
                                {
                                    <button class="btn btn-danger pe-none">ATTENZIONE</button>
                                }
                                else if (dataModel.Book.AvailableCopies <= 30)
                                {
                                    <button class="btn btn-warning pe-none">In esaurimento</button>
                                            }
                                else if (dataModel.Book.AvailableCopies > 30)
                                {
                                    <button class="btn btn-success pe-none">Vai alla grande</button>
                                }

                            </td>

                            <!------------------------------------------------ AZIONI -------------------------------------------------->
                            <td>
                                <!--MODIFICA-->
                                <div>
                                    <a href="@Url.Action("Update", "Book", new {id = dataModel.Book.Id})">
                                        <button type="button" class="button modifica bg-warning"><span class="material-icons-outlined">edit</button>
                                    </a>
                                </div>


                                <!--ELIMINA-->
                                <div>
                                    <button type="button" class="button btn-secondary btn-sm elimina bg-danger" data-bs-toggle="modal" data-bs-target="#@counter-exampleModal">
                                        <span class="material-icons-outlined">delete</span>
                                    </button>
                                </div>

                                <!--DETTAGLI-->
                                <div>
                                    <a href="@Url.Action("Details", "Book", new {id = dataModel.Book.Id})">
                                        <button type="button" class="btn btn-secondary btn-sm dettagli "><span class="material-icons-outlined"> info</span></button>
                                    </a>
                                </div>

                            
                                <!-- BOTTONE PER L'ACUISTO DAL FORNITORE CON MODALE -->
                                <button type="button" class="button btn-secondary bg-success" data-bs-toggle="modal" data-bs-target="#PurchaseModal[@counter]">
                                    <span class="material-icons-outlined">
                                        shopping_cart
                                    </span>
                                </button>


                               

                            </td>
                        </tr>
                        <!-------------------------------------------- MODALE PER LA DELETE ----------------------------------------->
                        <div class="modal fade" id="@counter-exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="exampleModalLabel">Elimina questo libro</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">


                                        Vuoi eliminare il libro "<strong>@dataModel.Book.Title</strong>"?
                                    </div>
                                    <div class="modal-footer">
                                        <form asp-controller="Book" asp-action="Delete" asp-route-id="@dataModel.Book.Id" method="post" class="mt-3">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-danger btn-sm mt-2">
                                                Conferma
                                            </button>
                                        </form>
                                        
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!-- MODALE ACQUISTO -->
                        <div class="modal fade" id="PurchaseModal[@counter]" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="exampleModalLabel">Conferma acquisto</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="input-group mb-3">
                                            <input type="number" id="@counter-quantity-input" class="form-control" value="1" placeholder="Scegli la quantità" aria-label="Scegli la quantità" aria-describedby="basic-addon2">

                                        </div>
                                       
                                        <input class="d-none" id="@counter-hidden-supplierPrice" value="@dataModel.Book.SupplierPrice"></input>
                                        <strong>Fornitore:</strong>
                                        <select id="@counter-supplier-input" rows="10" class="d-block w-100">
                                           
                                            <option  value="">Fornitore</option>
                                            @foreach (Supplier supplier in suppliers)
                                            {

                                                <option value="@supplier.Id">
                                                   @supplier.Name
                                                </option>
                                               
                                            }
                                        </select>


                                    </div>
                                    <div class="modal-footer">

                                        <!--BOTTONE CON FUNZIONE CHE SI RICOLLEGA ALLA CHIAMATA API-->

                                        <button type="submit" onclick="BuyFunction(event)" id="@counter" value="@dataModel.Book.Id" data-bs-dismiss="modal" data-bs-toggle="modal" data-bs-target="#ConfirmModal"
                                                class="btn btn-outline-danger btn-sm mt-2">
                                            Conferma
                                        </button>

                                    </div>
                                </div>
                            </div>
                        </div>

                        

                    }
                    <tr>
                        <td></td>
                        <td>
                            <a href="@Url.Action("Create", "Book")">
                                <img src="~/img/addBook.png" width="100" height="100" alt="Add new pizza button" />
                            </a>
                        </td>
                        <td class="align-middle"> Aggiungi un libro</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                       
                    
                    </tr>
                </tbody>
            </table>

        </div>
    </div>
</div>
@section Scripts{
    console.log(window)
        let inputSupplierId;


         function BuyFunction(event){
         
 
        let supplierIdSelect = document.getElementById(event.target.id + `-supplier-input`);

        inputSupplierId = supplierIdSelect.options[supplierIdSelect.selectedIndex].value;

        let supplierPrice = document.getElementById(event.target.id + `-hidden-supplierPrice`).value;

        let inputQuantity = document.getElementById(event.target.id + `-quantity-input`).value;

        console.log(inputSupplierId);

        axios.post('https://localhost:7093/api/AdminPurchaseDataApi/Create',{
        purchaseDate: new Date(),
        quantity: inputQuantity,
        purchasedBookId: event.target.value,
        supplierId: inputSupplierId,
        purchasePrice: inputQuantity*supplierPrice

        }


        )
        .then(response => {
console.log(response.data);
})
.catch(error => {
console.error(error.response.data);
})

 window.reload();

 }

}


}